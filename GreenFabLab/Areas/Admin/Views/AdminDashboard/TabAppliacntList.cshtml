@*@Styles.Render("~/Content/css")*@

<link href="~/Content/Theme/jquery-ui.min.css" rel="stylesheet" />
<link href="~/Content/ui.jqgrid.css" rel="stylesheet" />
<script src="~/Scripts/jqGrid/grid.locale-en.js"></script>
<script src="~/Scripts/jqGrid/jquery.jqGrid.js"></script>
<script src="~/Scripts/GitecAlertMsg.js"></script>
<script src="~/Scripts/bootstrap-dialog.min.js"></script>
<link href="~/Content/bootstrap-dialog.min.css" rel="stylesheet" />

<script type="text/javascript">
        //$.noConflict();
        $(document).ready(function () {
                       @if (TempData["SucessAlert"] != null && TempData["SucessAlert"].ToString() == "1")
                       {
            @:SuccesMessage("Saved successfully.", "Information");
                        TempData.Remove("SucessAlert");
                       }
                       else if (TempData["SucessAlert"] != null && TempData["SucessAlert"].ToString() == "0")
                       {
            @:ErrorMessage("Error while saving the records.", "Warning");
                        TempData.Remove("SucessAlert");
                       }
                       else if (TempData["SucessAlert"] != null && TempData["SucessAlert"].ToString() == "2")
                       {
            @:SuccesMessage("Updated successfully.", "Information");
                        TempData.Remove("SucessAlert");
                       }
                       else if (TempData["SucessAlert"] != null && TempData["SucessAlert"].ToString() == "-1")
                       {
            @:AlertMessage("User already exist.", "Information");
                        TempData.Remove("SucessAlert");
                       }
                       else if (TempData["SucessAlert"] != null && TempData["SucessAlert"].ToString() == "-2")
                       {
            @:SuccesMessage("Deleted successfully.", "Information");
                        TempData.Remove("SucessAlert");
                       }
        });
</script>



<div>

    <ul class="nav nav-tabs">
        <li id="liPatientList" class="active"><a data-toggle="tab" href="#patientList">Patient List</a></li>
        <li id="liAddEditPatient"><a data-toggle="tab" class="disabled" href="#addEditPatient" id="lnkReplace">Replace Txt</a></li>
    </ul>

    <div class="tab-content">
        <div id="patientList" class="tab-pane fade in active">
            <hr />
            <div class="row">
                <div>
                    <div class="form-group">
                        <div class="col-md-3">
                            <h4>Applicant List</h4>
                        </div>
                        <div class="col-md-7">
                        </div>
                        <div class="col-md-2">


                            <a class="btn btn-success" onclick="getRecord(0,'Add')"><i class="fa fa-plus"></i> Add New</a>

                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-12">
                            <table id="jqGrid"></table>

                            <div id="jqGridPager">

                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
        <div id="addEditPatient" class="tab-pane fade">
            <div id="tabAddOrEditPatient">

            </div>
        </div>

    </div>
</div>

<script type="text/javascript">

    $(document).ready(function () {
        $("#liAddEditPatient").hide();

        //LoadTab('tabEmployeeList')
    });




    $(function () {
        $grid = $("#jqGrid").jqGrid({
            url: '@Url.Action("GetApplicantList", "Applicant", new { Area = "Applicant" })',
            mtype: 'GET',
            datatype: 'json',
            colModel: [
                { label: 'UserID', name: 'UserID', hidden: true,key:true  },

                { label: 'Full Name', name: 'FullName'},
            { label: 'Email Address', name: 'EmailAddress' },
            { label: 'Country', name: 'Country' },
                {
                label: 'Document',
                name: 'RegDocumentPath',
                formatter: function (cellvalue, options, rowObject) {

                    if (cellvalue ==null) {
                          return '@Html.Label(" ", new { @title = "Upload Document Pending", @class = "fa fa-upload" ,@style = "color:Red;font-weight:bold;" })'

                    } else {

                    var x = '@Html.ActionLink(" ", "Download", "Patient", new { Area = "Patient", fileName = "path" }, new { @title = "Download Document", @class = "fa fa-download", @style = "color:Blue;font-weight:bold;" })'
                    return x.replace("path", cellvalue)
                    }

                },
                align: "center",
                //width: 80,
                search: false
            },

                {
                label: ' ',
                name: 'UserID',
                formatter: buttonFormatter,
                align: "center",
                //width: 60,
                 search: false,
                formatoptions: {
                    action: 'Edit'
                }
            },

            {
                label: ' ',
                name: 'UserID',
                formatter: buttonFormatter,
                align: "center",
                //width: 60,
                search: false,
                formatoptions: {
                    action: 'Delete'
                }
                },
            {
                label: ' ',
                name: 'UserID',
                formatter: mailSendStatus,
                align: "center",
                //width: 60,
                search: false,
                formatoptions: {
                    action: 'Accept'
                }
            },
            {
                label: ' ',
                name: 'UserID',
                formatter: mailSendStatus,
                align: "center",
                //width: 60,
                search: false,
                formatoptions: {
                    action: 'Reject'
                }
            }
            ],
            shrinkToFit: true,
            loadonce: true,
            pager: '#jqGridPager',
            rowNum: 10,
            rowList: [10, 20, 50],
            viewrecords: true,
            autowidth: true,
            sortorder: 'asc',
            //caption: "Employee List"
            });
            $("#jqGrid").jqGrid('navGrid', 'jqGridPager', { edit: false, add: false, delete: false });

            $("#jqGrid").jqGrid('filterToolbar', { stringResult: true, searchOnEnter: false, defaultSearch: "cn" });

    });

    function buttonFormatter(cellvalue, options, rowObject) {

        var operation = options.colModel.formatoptions.action;

       if (operation == "Edit") {
           return ' <a class="btn btn-link" aria-label="Edit" onclick=\"getRecord(' + cellvalue + ',' + "\'" + operation + "\'" + ');\"><i class="fa fa-pencil" style="color:#0cc8f7" title="Edit Record"  aria-hidden="true"></i> </a>';
        } else if (operation == "Delete") {
           return ' <a class="btn btn-link" aria-label="Delete" onclick=\"getRecord(' + cellvalue + ',' + "\'" + operation + "\'" + ');\"><i class="fa fa-trash-o"style="color:red" title="Delete Record" aria-hidden="true"></i> </a>';
        }

    }
    function mailSendStatus(cellvalue, options, rowObject) {
        var operation = options.colModel.formatoptions.action;

        if (operation == "Accept") {
            return ' <a class="btn btn-link" aria-label="Accept" onclick=\"sendStatus(' + cellvalue + ',' + "\'" + operation + "\'" + ');\"><i class="fa fa-check" style="color:green" title="Accept"  aria-hidden="true"></i> </a>';
        } else if (operation == "Reject") {
            return ' <a class="btn btn-link" aria-label="Reject" onclick=\"sendStatus(' + cellvalue + ',' + "\'" + operation + "\'" + ');\"><i class="fa fa-ban" style="color:orange" title="Reject" aria-hidden="true"></i> </a>';
        }
    }

    function sendStatus(id, operation) {
        if (operation == "Accept") {


            var dataToPost = { id: id, operation: operation };

                $.ajax({
                    url: '@Url.Action("SendStatus", "Patient", new { Area = "Patient" })',
                    type: "POST",
                    data: JSON.stringify(dataToPost),
                    contentType: "application/json; charset=utf-8",
                    success: function (result) {

                        if (result=="-1")
                        {
                                ErrorMessage("Error while sending status.", "Warning");

                        } else {
                            SuccesMessage("Cofirmation mail send successfully with login credentials.", "Information");
                        }

                    }
                });




        } else {

        }
    }

    function getRecord(id, operation) {
        if (operation != "Delete" ) {
            $("#liAddEditPatient").show();
            $("#liPatientList").removeClass('active')
            $("#liAddEditPatient").addClass('active')

            $("#patientList").removeClass(' in active')
            $("#addEditPatient").addClass(' in active')

        }


        if (operation == "View") {

            $("#lnkReplace").text(operation);
                 $("#tabAddOrEditPatient").load('@Url.Action("AddOrEditPatient", "Patient", new { Area = "Patient" })', { id: id  }, function () {
            });

        }else if (operation == "Add") {
            $("#lnkReplace").text(operation);
                  $("#tabAddOrEditPatient").load('@Url.Action("AddOrEditPatient", "Patient", new { Area = "Patient" })', { id: id  }, function () {
            });
        }

        else if (operation == "Edit") {
            $("#lnkReplace").text(operation);
            $("#tabAddOrEditPatient").load('@Url.Action("AddOrEditPatient", "Patient", new { Area = "Patient" })', { id: id  }, function () {
            });
        } else if (operation == "Delete") {

            GetConfirm("Are you sure to remove this record?", function () {
                //$("#tbody_readings").find("#tr_readings-" + id).remove();

                var dataToPost = { id: id };

                $.ajax({
                    url: '@Url.Action("DeletePatient", "Patient", new { Area = "Patient" })',
                    type: "POST",
                    data: JSON.stringify(dataToPost),
                    contentType: "application/json; charset=utf-8",
                    success: function (result) {

                        if (result=="-1")
                        {
                                ErrorMessage("Error while deleting the records.", "Warning");

                        } else {
                            SuccesMessage("Deleted successfully.", "Information");
                        }

                    }
                });

            }, null);





        }


    }
</script>
